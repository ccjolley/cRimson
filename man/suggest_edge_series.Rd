% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/suggest_edge_series.R
\name{suggest_edge_series}
\alias{suggest_edge_series}
\title{Suggest an edge series}
\usage{
suggest_edge_series(g, n1, metric, num_steps, search_list = NULL,
  verbose = TRUE, uniq_n2 = TRUE)
}
\arguments{
\item{g}{A graph object}

\item{n1}{The name of the prospective retweeter}

\item{metric}{Graph metric to optimize}

\item{num_steps}{Number of iterations to perform}

\item{search_list}{List of possible targets to search over (defaults to V(g),
but choosing a shorter list of high-influence nodes will speed the search
considerably)}

\item{verbose}{Verbose output?}

\item{uniq_n2}{Don't suggest the same partner more than once, even if
repeated interactions would continue to boost your metric of choice.}
}
\description{
The owner of a particular Twitter handle might want to increase his/her
standing in a particular conversation through targeted engagement with
specific handles. Given a graph metric to optimize, this function suggests
new interactions that will yield the greatest improvements.
}
\details{
In general, this function is good for finding high-influence nodes that are
relatively distant in the network from a node of interest.

TODO: I'm a little confused as to how I should export just one function from
here!
}
\examples{
library(dplyr)
library(igraph)
g <- get_ws('data','GeoCenter 0524-1.xls') \%>\%
  ws_to_graph() \%>\%
  graph_lcc()
slist <- page.rank(g)$vector \%>\%
  sort(decreasing=TRUE) \%>\%
  head(100) \%>\%
  names()
new_g <- suggest_edge_series(g,'@USAID',betweenness,5,search_list=slist)

}

